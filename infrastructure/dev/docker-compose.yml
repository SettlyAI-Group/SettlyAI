version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: settly_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - settly_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - settly_network

  settly-db-migration:
    build:
      context: ../../backend
      dockerfile: ../infrastructure/dev/Dockerfile.db
    container_name: settly_db_migration
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - settly_network
    volumes:
      - ../../backend:/app
      - ./entrypoint.sh:/entrypoint.sh:ro
    working_dir: /app
    command: ["bash", "/entrypoint.sh"]

volumes:
  settly_data:

networks:
  settly_network:
    driver: bridge